<?xml version="1.0"?>
<project name="orchestra" default="main" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
  <!-- Sets variables which can later be used. -->
  <!-- The value of a property is accessed via ${} -->
  <property name="antlr.src.dir" location="target/generated-sources/antlr4" />
  <property name="main.src.dir" location="src/main/java" />
  <property name="src.dir" location="${main.src.dir}" />
  <property name="build.dir" location="target/classes" />
  <property name="dist.dir" location="dist" />
  <property name="conf.dir" location="conf" />
  <property name="docs.dir" location="docs" />
  <property name="lib.dir" location="lib" />
  <property name="bin.dir" location="bin" />
  <property name="keystore.dir" location="keystore" />
  <property name="ro.dir" location="ro" />
  <path id="classpath">
	<fileset dir="${lib.dir}">
		<include name="*.jar"/>
	</fileset>
  </path>
  <target name="parser" depends="makedir">
    <exec executable="bin/antlr4"/>
  </target>
  <target name="resolve">
    <ivy:retrieve />
  </target>
	  
  <!-- Deletes the existing build, docs and dist directory-->
  <target name="clean">
    <delete dir="${build.dir}" />
    <delete dir="${docs.dir}" />
    <delete dir="${dist.dir}" />
  </target>

  <!-- Creates the  build, docs and dist directory-->
  <target name="makedir">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${docs.dir}" />
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${antlr.src.dir}" />
  </target>

  <target name="jar">
    <jar destfile="${dist.dir}/lib/orchestra.jar"
        basedir="${build.dir}"
        includes="**"
        excludes="**/*.conf"
    />
  </target>
  <target name="auth-jar">
    <jar destfile="${dist.dir}/lib/role-provider.jar" >
      <fileset dir="${build.dir}/org/orchestra/provider/"/>
      <fileset dir="${build.dir}/org/orchestra/client/"/>
      <fileset dir="${build.dir}/org/orchestra/auth/"/>
    </jar>
  </target>

  <target name="client-jar">
    <jar destfile="${dist.dir}/lib/orchestra-client.jar"
        basedir="${build.dir}"
        includes="**"
        excludes="**/org/orchestra/rest/,**/*.properties,**/*.conf,**/*.conf.example,**/*.cfg"
	/>
  </target>

  <target name="resource">
    <copy todir="${build.dir}">
      <fileset dir="${main.src.dir}" excludes="**/*.java"/>
    </copy>
  </target>
  <!-- Compiles the java code (including the usage of library for JUnit -->
  <target name="compile" depends="clean, makedir, resource, resolve">
    <javac nowarn="on" srcdir="${src.dir}" destdir="${build.dir}">
      <classpath>
      	<path refid="classpath"/>
      </classpath>
    </javac>
  </target>

  <!-- Creates Javadoc -->
  <target name="docs" depends="compile">
    <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
      <!-- Define which files / directory should get included, we include all -->
       <fileset dir="${src.dir}">
                <include name="**" />
           </fileset>
    </javadoc>
  </target>

 <target name="package-client" depends="client-jar">
    <taskdef name="deb" classname="org.vafer.jdeb.ant.DebAntTask"/>

    <copy todir="${build.dir}/deb/control">
      <fileset dir="src/deb/control"/>
      <filterset begintoken="[[" endtoken="]]">
        <filter token="version" value="${version}"/>
        <filter token="description" value="${description}"/>
        <filter token="name" value="${ant.project.name}"/>
      </filterset>
    </copy>
    <deb destfile="${dist.dir}/${ant.project.name}-client.deb" control="${build.dir}/deb/control" verbose="true">
      <data src="${lib.dir}" type="directory">
        <exclude name="**/*-sources.jar"/>
        <exclude name="**/*-javadoc.jar"/>
        <exclude name="**/org.restlet*.jar"/>
        <mapper type="perm" prefix="/usr/share/orchestra/lib"/>
        <exclude name=""/>
      </data>
      <data src="${dist.dir}/lib/orchestra-client.jar" type="file">
        <mapper type="perm" prefix="/usr/share/orchestra/"/>
      </data>
      <data src="${conf.dir}/" type="directory" conffile="true">
        <exclude name="**/*.cfg"/>
        <exclude name="**/*.conf"/>
        <exclude name="**/*.ini"/>
        <exclude name="**/server.conf.example"/>
        <exclude name="**/init/**"/>
        <mapper type="perm" prefix="/etc/orchestra"/>
      </data>
      <tarfileset dir="${bin.dir}/"  filemode="755" prefix="/usr/bin">
        <exclude name="**/antlr4"/>
      </tarfileset>
      <tarfileset dir="${conf.dir}/init/"  filemode="755" prefix="/etc/init.d/">
        <exclude name="**/orchestra-server"/>
      </tarfileset>
      <data src="${keystore.dir}/" type="directory">
        <exclude name="**/server*.jks"/>
        <exclude name="**/clientKey.jks"/>
        <mapper type="perm" prefix="/var/lib/orchestra/keystore"/>
      </data>
    </deb>
 </target>
 <target name="package" depends="jar">
    <taskdef name="deb" classname="org.vafer.jdeb.ant.DebAntTask"/>

    <copy todir="${build.dir}/deb/control">
      <fileset dir="src/deb/control"/>
      <filterset begintoken="[[" endtoken="]]">
        <filter token="version" value="${version}"/>
        <filter token="description" value="${description}"/>
        <filter token="name" value="${ant.project.name}"/>
      </filterset>
    </copy>

    <deb destfile="${dist.dir}/${ant.project.name}.deb" control="${build.dir}/deb/control" verbose="true">

      <data src="${lib.dir}" type="directory">
        <exclude name="**/*-sources.jar"/>
        <exclude name="**/*-javadoc.jar"/>
        <mapper type="perm" prefix="/usr/share/orchestra/lib"/>
      </data>
      <data src="${dist.dir}/lib/orchestra.jar" type="file">
        <mapper type="perm" prefix="/usr/share/orchestra/"/>
      </data>
      <data src="${conf.dir}/" type="directory" conffile="true">
        <exclude name="**/*.cfg"/>
        <exclude name="**/*.conf"/>
        <exclude name="**/init/**"/>
        <mapper type="perm" prefix="/etc/orchestra"/>
      </data>
      <tarfileset dir="${bin.dir}/"  filemode="755" prefix="/usr/bin">
        <exclude name="**/antlr4"/>
      </tarfileset>
      <tarfileset dir="${conf.dir}/init/"  filemode="755" prefix="/etc/init.d/"/>
      <data src="${keystore.dir}/" type="directory">
        <mapper type="perm" prefix="/var/lib/orchestra/keystore"/>
      </data>
      <data src="${ro.dir}/" type="directory">
        <mapper type="perm" prefix="/var/lib/orchestra/ro"/>
      </data>

    </deb>

  </target>
  <!--Creates the deployable jar file  -->

  <target name="main" depends="compile, jar, docs">
    <description>Main target</description>
  </target>

</project> 
